// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM4K.hdl

/**
 * Memory of 4K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the neet time step onward).
 */

CHIP RAM4K {
    IN in[16], load, address[12];
    OUT out[16];

    PARTS:
    // Put your code here:
    DMux8Way(in=load, sel=address[9..11], a=ea, b=eb, c=ec, d=ed, e=ee, f=ef, g=eg, h=eh);
    RAM512(in=in, address=address[0..8], load=ea, out=out1);
    RAM512(in=in, address=address[0..8], load=eb, out=out2);
    RAM512(in=in, address=address[0..8], load=ec, out=out3);
    RAM512(in=in, address=address[0..8], load=ed, out=out4);
    RAM512(in=in, address=address[0..8], load=ee, out=out5);
    RAM512(in=in, address=address[0..8], load=ef, out=out6);
    RAM512(in=in, address=address[0..8], load=eg, out=out7);
    RAM512(in=in, address=address[0..8], load=eh, out=out8);
    Mux8Way16(a=out1, b=out2, c=out3, d=out4, e=out5, f=out6, g=out7, h=out8, sel=address[9..11], out=out);
}
